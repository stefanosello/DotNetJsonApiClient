### YamlMime:ManagedReference
items:
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1
  commentId: T:JsonApiClient.Interfaces.IJsonApiQueryClient`1
  id: IJsonApiQueryClient`1
  parent: JsonApiClient.Interfaces
  children:
  - JsonApiClient.Interfaces.IJsonApiQueryClient`1.FindAsync(System.Object,System.Threading.CancellationToken)
  - JsonApiClient.Interfaces.IJsonApiQueryClient`1.FirstOrDefaultAsync(System.Threading.CancellationToken)
  - JsonApiClient.Interfaces.IJsonApiQueryClient`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - JsonApiClient.Interfaces.IJsonApiQueryClient`1.OrderBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - JsonApiClient.Interfaces.IJsonApiQueryClient`1.OrderByDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - JsonApiClient.Interfaces.IJsonApiQueryClient`1.OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  - JsonApiClient.Interfaces.IJsonApiQueryClient`1.OrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  - JsonApiClient.Interfaces.IJsonApiQueryClient`1.PageNumber(System.Int32)
  - JsonApiClient.Interfaces.IJsonApiQueryClient`1.PageNumber``1(System.Int32,System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  - JsonApiClient.Interfaces.IJsonApiQueryClient`1.PageSize(System.Int32)
  - JsonApiClient.Interfaces.IJsonApiQueryClient`1.PageSize``1(System.Int32,System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  - JsonApiClient.Interfaces.IJsonApiQueryClient`1.Select(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - JsonApiClient.Interfaces.IJsonApiQueryClient`1.Select``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  - JsonApiClient.Interfaces.IJsonApiQueryClient`1.ToListAsync(System.Threading.CancellationToken)
  - JsonApiClient.Interfaces.IJsonApiQueryClient`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  - JsonApiClient.Interfaces.IJsonApiQueryClient`1.Where``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  langs:
  - csharp
  - vb
  name: IJsonApiQueryClient<TRootEntity>
  nameWithType: IJsonApiQueryClient<TRootEntity>
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>
  type: Interface
  source:
    remote:
      path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
      branch: main
      repo: git@github.com:stefanosello/DotNetJsonApiClient.git
    id: IJsonApiQueryClient
    path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
    startLine: 10
  assemblies:
  - JsonApiClient
  namespace: JsonApiClient.Interfaces
  summary: >-
    Interface for a query client that can be used to build the json:api formatted query string to retrieve data from

    a json:api-compliant server. It exposes the main methods that can be used to build a query, plus the methods

    to send the request to the server through an HTTP client.
  example: []
  syntax:
    content: 'public interface IJsonApiQueryClient<TRootEntity> where TRootEntity : class'
    typeParameters:
    - id: TRootEntity
      description: The main resource type requested by the query that is going to be built.
    content.vb: Public Interface IJsonApiQueryClient(Of TRootEntity As Class)
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity)
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity)
  name.vb: IJsonApiQueryClient(Of TRootEntity)
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.Select``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  commentId: M:JsonApiClient.Interfaces.IJsonApiQueryClient`1.Select``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  id: Select``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  parent: JsonApiClient.Interfaces.IJsonApiQueryClient`1
  langs:
  - csharp
  - vb
  name: Select<TEntity>(Expression<Func<TEntity, object>>)
  nameWithType: IJsonApiQueryClient<TRootEntity>.Select<TEntity>(Expression<Func<TEntity, object>>)
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.Select<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, object>>)
  type: Method
  source:
    remote:
      path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
      branch: main
      repo: git@github.com:stefanosello/DotNetJsonApiClient.git
    id: Select
    path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
    startLine: 31
  assemblies:
  - JsonApiClient
  namespace: JsonApiClient.Interfaces
  summary: >-
    Builds the <code>select[res]</code> part of the query string. It is used to specify which fields 

    should be returned by the server for the resources of type <code class="typeparamref">TEntity</code>.
  example:
  - >-
    Consider a <code>Book</code> class with resource type <code>books</code> with the fields <code>Title</code> and <code>Price</code>.

    The following code snippet:

    <pre><code class="lang-csharp">queryClient.Select&lt;Book&gt;(b =&gt; new() { b.Title, b.Price });</code></pre>

    will render the following query string:

    <pre><code class="lang-csharp">?select[books]=title,price</code></pre>
  syntax:
    content: 'IJsonApiQueryClient<TRootEntity> Select<TEntity>(Expression<Func<TEntity, object>> selectStatement) where TEntity : class, IJsonApiResource'
    parameters:
    - id: selectStatement
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Object}}
      description: >-
        A lambda function returning a new() object with the fields to be included in the
            <code>select[res]</code> query parameter.
    typeParameters:
    - id: TEntity
      description: The type of the resource for which to define the set of fields to retrieve.
    return:
      type: JsonApiClient.Interfaces.IJsonApiQueryClient`1
      description: This <xref href="JsonApiClient.Interfaces.IJsonApiQueryClient%601" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Function [Select](Of TEntity As {Class, IJsonApiResource})(selectStatement As Expression(Of Func(Of TEntity, Object))) As IJsonApiQueryClient(Of TRootEntity)
  overload: JsonApiClient.Interfaces.IJsonApiQueryClient`1.Select*
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).Select(Of TEntity)(Expression(Of Func(Of TEntity, Object)))
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).Select(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Object)))
  name.vb: Select(Of TEntity)(Expression(Of Func(Of TEntity, Object)))
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.Select(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:JsonApiClient.Interfaces.IJsonApiQueryClient`1.Select(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: Select(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: JsonApiClient.Interfaces.IJsonApiQueryClient`1
  langs:
  - csharp
  - vb
  name: Select(Expression<Func<TRootEntity, object>>)
  nameWithType: IJsonApiQueryClient<TRootEntity>.Select(Expression<Func<TRootEntity, object>>)
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.Select(System.Linq.Expressions.Expression<System.Func<TRootEntity, object>>)
  type: Method
  source:
    remote:
      path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
      branch: main
      repo: git@github.com:stefanosello/DotNetJsonApiClient.git
    id: Select
    path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
    startLine: 53
  assemblies:
  - JsonApiClient
  namespace: JsonApiClient.Interfaces
  summary: >-
    Builds the <code>select</code> part of the query string. It is used to specify which fields of the main resource

    of type <code class="typeparamref">TRootEntity</code> should be returned by the server.
  example:
  - >-
    Consider an <code>Author</code> class with resource type <code>authors</code> and fields <code>Name</code> and <code>DateOfBirth</code>.

    The following code snippet:

    <pre><code class="lang-csharp">queryClient.Select(a =&gt; new() { a.Name, b.DateOfBirth });</code></pre>

    will render the following query string:

    <pre><code class="lang-csharp">?select=name,dateOfBirth</code></pre>

    considering that <code>Author</code> is the main resource type.
  syntax:
    content: IJsonApiQueryClient<TRootEntity> Select(Expression<Func<TRootEntity, object>> selectStatement)
    parameters:
    - id: selectStatement
      type: System.Linq.Expressions.Expression{System.Func{{TRootEntity},System.Object}}
      description: >-
        A lambda function returning a new() object with the fields to be included in the
            <code>select</code> query parameter.
    return:
      type: JsonApiClient.Interfaces.IJsonApiQueryClient`1
      description: This <xref href="JsonApiClient.Interfaces.IJsonApiQueryClient%601" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Function [Select](selectStatement As Expression(Of Func(Of TRootEntity, Object))) As IJsonApiQueryClient(Of TRootEntity)
  overload: JsonApiClient.Interfaces.IJsonApiQueryClient`1.Select*
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).Select(Expression(Of Func(Of TRootEntity, Object)))
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).Select(System.Linq.Expressions.Expression(Of System.Func(Of TRootEntity, Object)))
  name.vb: Select(Expression(Of Func(Of TRootEntity, Object)))
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.Where``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  commentId: M:JsonApiClient.Interfaces.IJsonApiQueryClient`1.Where``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  id: Where``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: JsonApiClient.Interfaces.IJsonApiQueryClient`1
  langs:
  - csharp
  - vb
  name: Where<TEntity>(Expression<Func<TEntity, bool>>)
  nameWithType: IJsonApiQueryClient<TRootEntity>.Where<TEntity>(Expression<Func<TEntity, bool>>)
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.Where<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>)
  type: Method
  source:
    remote:
      path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
      branch: main
      repo: git@github.com:stefanosello/DotNetJsonApiClient.git
    id: Where
    path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
    startLine: 78
  assemblies:
  - JsonApiClient
  namespace: JsonApiClient.Interfaces
  summary: >-
    Builds the <code>filter[res]</code> part of the query string. It can be used to specify a filtering condition on the

    fields of the <code class="typeparamref">TEntity</code> resource type that will affect the set of <code class="typeparamref">TEntity</code>

    resources returned by the server. This means that each resource of type <code class="typeparamref">TEntity</code> in the

    server response will satisfy the filtering condition defined by the <code class="paramref">whereStatement</code> lambda function.
  example:
  - >-
    Consider an <code>Author</code> class with resource type <code>authors</code> and a set of related resources of class <code>Book</code>

    having resource type <code>books</code> and field <code>Title</code>. The following code snippet:

    The following code snippet:

    <pre><code class="lang-csharp">queryClient.Where&lt;Book&gt;(b =&gt; b.Title == "The Hobbit");</code></pre>

    will render the following query string:

    <pre><code class="lang-csharp">?filter[books]=Equals(title,'The Hobbit')</code></pre>

    considering that <code>Author</code> is the main resource type.
  syntax:
    content: 'IJsonApiQueryClient<TRootEntity> Where<TEntity>(Expression<Func<TEntity, bool>> whereStatement) where TEntity : class, IJsonApiResource'
    parameters:
    - id: whereStatement
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
      description: >-
        A lambda function accepting a <code class="typeparamref">TEntity</code> as parameter
            and returning a boolean expression that will be used as the filtering condition.
    typeParameters:
    - id: TEntity
      description: The type of the resource for which to define the filtering condition.
    return:
      type: JsonApiClient.Interfaces.IJsonApiQueryClient`1
      description: This <xref href="JsonApiClient.Interfaces.IJsonApiQueryClient%601" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Function Where(Of TEntity As {Class, IJsonApiResource})(whereStatement As Expression(Of Func(Of TEntity, Boolean))) As IJsonApiQueryClient(Of TRootEntity)
  overload: JsonApiClient.Interfaces.IJsonApiQueryClient`1.Where*
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).Where(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).Where(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: Where(Of TEntity)(Expression(Of Func(Of TEntity, Boolean)))
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:JsonApiClient.Interfaces.IJsonApiQueryClient`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  id: Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  parent: JsonApiClient.Interfaces.IJsonApiQueryClient`1
  langs:
  - csharp
  - vb
  name: Where(Expression<Func<TRootEntity, bool>>)
  nameWithType: IJsonApiQueryClient<TRootEntity>.Where(Expression<Func<TRootEntity, bool>>)
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.Where(System.Linq.Expressions.Expression<System.Func<TRootEntity, bool>>)
  type: Method
  source:
    remote:
      path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
      branch: main
      repo: git@github.com:stefanosello/DotNetJsonApiClient.git
    id: Where
    path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
    startLine: 101
  assemblies:
  - JsonApiClient
  namespace: JsonApiClient.Interfaces
  summary: >-
    Builds the <code>filter</code> part of the query string. It can be used to specify a filtering condition on the

    fields of the <code class="typeparamref">TRootEntity</code> and resource type and its subresources, that will affect the set of

    <code class="typeparamref">TRootEntity</code> resources returned by the server.
  example:
  - >-
    Consider an <code>Author</code> class with resource type <code>authors</code> and a field <code>Name</code>.

    The following code snippet:

    <pre><code class="lang-csharp">queryClient.Where(a =&gt; a.Name == "J.R.R. Tolkien");</code></pre>

    will render the following query string:

    <pre><code class="lang-csharp">?filter=Equals(name,'J.R.R. Tolkien')</code></pre>

    considering that <code>Author</code> is the main resource type.
  syntax:
    content: IJsonApiQueryClient<TRootEntity> Where(Expression<Func<TRootEntity, bool>> whereStatement)
    parameters:
    - id: whereStatement
      type: System.Linq.Expressions.Expression{System.Func{{TRootEntity},System.Boolean}}
      description: >-
        A lambda function accepting a <code class="typeparamref">TRootEntity</code> as parameter
            and returning a boolean expression that will be used as the filtering condition.
    return:
      type: JsonApiClient.Interfaces.IJsonApiQueryClient`1
      description: This <xref href="JsonApiClient.Interfaces.IJsonApiQueryClient%601" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Function Where(whereStatement As Expression(Of Func(Of TRootEntity, Boolean))) As IJsonApiQueryClient(Of TRootEntity)
  overload: JsonApiClient.Interfaces.IJsonApiQueryClient`1.Where*
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).Where(Expression(Of Func(Of TRootEntity, Boolean)))
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).Where(System.Linq.Expressions.Expression(Of System.Func(Of TRootEntity, Boolean)))
  name.vb: Where(Expression(Of Func(Of TRootEntity, Boolean)))
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:JsonApiClient.Interfaces.IJsonApiQueryClient`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: JsonApiClient.Interfaces.IJsonApiQueryClient`1
  langs:
  - csharp
  - vb
  name: Include(Expression<Func<TRootEntity, object>>)
  nameWithType: IJsonApiQueryClient<TRootEntity>.Include(Expression<Func<TRootEntity, object>>)
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.Include(System.Linq.Expressions.Expression<System.Func<TRootEntity, object>>)
  type: Method
  source:
    remote:
      path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
      branch: main
      repo: git@github.com:stefanosello/DotNetJsonApiClient.git
    id: Include
    path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
    startLine: 124
  assemblies:
  - JsonApiClient
  namespace: JsonApiClient.Interfaces
  summary: >-
    Builds the <code>include</code> part of the query string. It can be used to specify which subresources of

    <code class="typeparamref">TRootEntity</code> resource type should be returned by the server.
  example:
  - >-
    Consider an <code>Author</code> class with resource type <code>authors</code> and a relationship <code>Books</code> with an entity

    type <code>books</code>.

    The following code snippet:

    <pre><code class="lang-csharp">queryClient.Include(a =&gt; a.Books);</code></pre>

    will render the following query string:

    <pre><code class="lang-csharp">?include=books</code></pre>

    considering that <code>Author</code> is the main resource type.
  syntax:
    content: IJsonApiQueryClient<TRootEntity> Include(Expression<Func<TRootEntity, object>> includeStatement)
    parameters:
    - id: includeStatement
      type: System.Linq.Expressions.Expression{System.Func{{TRootEntity},System.Object}}
      description: >-
        A lambda function accepting a <code class="typeparamref">TRootEntity</code> as parameter
            and returning a <code class="typeparamref">TRootEntity</code> relationship property, that will eventually be included
            in the server response.
    return:
      type: JsonApiClient.Interfaces.IJsonApiQueryClient`1
      description: This <xref href="JsonApiClient.Interfaces.IJsonApiQueryClient%601" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Function Include(includeStatement As Expression(Of Func(Of TRootEntity, Object))) As IJsonApiQueryClient(Of TRootEntity)
  overload: JsonApiClient.Interfaces.IJsonApiQueryClient`1.Include*
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).Include(Expression(Of Func(Of TRootEntity, Object)))
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).Include(System.Linq.Expressions.Expression(Of System.Func(Of TRootEntity, Object)))
  name.vb: Include(Expression(Of Func(Of TRootEntity, Object)))
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.OrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  commentId: M:JsonApiClient.Interfaces.IJsonApiQueryClient`1.OrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  id: OrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  parent: JsonApiClient.Interfaces.IJsonApiQueryClient`1
  langs:
  - csharp
  - vb
  name: OrderBy<TEntity>(Expression<Func<TEntity, object>>, Expression<Func<TRootEntity, IEnumerable<TEntity>>>)
  nameWithType: IJsonApiQueryClient<TRootEntity>.OrderBy<TEntity>(Expression<Func<TEntity, object>>, Expression<Func<TRootEntity, IEnumerable<TEntity>>>)
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.OrderBy<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, object>>, System.Linq.Expressions.Expression<System.Func<TRootEntity, System.Collections.Generic.IEnumerable<TEntity>>>)
  type: Method
  source:
    remote:
      path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
      branch: main
      repo: git@github.com:stefanosello/DotNetJsonApiClient.git
    id: OrderBy
    path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
    startLine: 150
  assemblies:
  - JsonApiClient
  namespace: JsonApiClient.Interfaces
  summary: >-
    Builds the <code>orderBy[res]</code> part of the query string. It can be used to specify how to sort in ascending order

    the instances of the specified <code class="typeparamref">TRootEntity</code> subresources set. The sorting is done based

    on the specified property of the <code class="typeparamref">TEntity</code> resource type.
  example:
  - >-
    Consider an <code>Author</code> class with resource type <code>authors</code> and a relationship <code>Books</code> with an entity

    type <code>books</code>. Each book also has the field <code>Title</code>.

    The following code snippet:

    <pre><code class="lang-csharp">queryClient.OrderBy(b =&gt; b.Title, a =&gt; a.Books);</code></pre>

    will render the following query string:

    <pre><code class="lang-csharp">?orderBy[books]=title</code></pre>

    considering that <code>Author</code> is the main resource type.
  syntax:
    content: 'IJsonApiQueryClient<TRootEntity> OrderBy<TEntity>(Expression<Func<TEntity, object>> orderByStatement, Expression<Func<TRootEntity, IEnumerable<TEntity>>> subresourceSelector) where TEntity : class, IJsonApiResource'
    parameters:
    - id: orderByStatement
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Object}}
      description: >-
        A lambda function accepting a <code class="typeparamref">TEntity</code> as parameter
            and returning a <code class="typeparamref">TEntity</code> attribute property, that will be used to sort the records of
            the given subresource set.
    - id: subresourceSelector
      type: System.Linq.Expressions.Expression{System.Func{{TRootEntity},System.Collections.Generic.IEnumerable{{TEntity}}}}
      description: >-
        A lambda function accepting a <code class="typeparamref">TRootEntity</code> as parameter
            and returning an enumerable of <code class="typeparamref">TEntity</code>, representing the set of subresource to sort.
    typeParameters:
    - id: TEntity
    return:
      type: JsonApiClient.Interfaces.IJsonApiQueryClient`1
      description: This <xref href="JsonApiClient.Interfaces.IJsonApiQueryClient%601" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Function OrderBy(Of TEntity As {Class, IJsonApiResource})(orderByStatement As Expression(Of Func(Of TEntity, Object)), subresourceSelector As Expression(Of Func(Of TRootEntity, IEnumerable(Of TEntity)))) As IJsonApiQueryClient(Of TRootEntity)
  overload: JsonApiClient.Interfaces.IJsonApiQueryClient`1.OrderBy*
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).OrderBy(Of TEntity)(Expression(Of Func(Of TEntity, Object)), Expression(Of Func(Of TRootEntity, IEnumerable(Of TEntity))))
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).OrderBy(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Object)), System.Linq.Expressions.Expression(Of System.Func(Of TRootEntity, System.Collections.Generic.IEnumerable(Of TEntity))))
  name.vb: OrderBy(Of TEntity)(Expression(Of Func(Of TEntity, Object)), Expression(Of Func(Of TRootEntity, IEnumerable(Of TEntity))))
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.OrderBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:JsonApiClient.Interfaces.IJsonApiQueryClient`1.OrderBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: OrderBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: JsonApiClient.Interfaces.IJsonApiQueryClient`1
  langs:
  - csharp
  - vb
  name: OrderBy(Expression<Func<TRootEntity, object>>)
  nameWithType: IJsonApiQueryClient<TRootEntity>.OrderBy(Expression<Func<TRootEntity, object>>)
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.OrderBy(System.Linq.Expressions.Expression<System.Func<TRootEntity, object>>)
  type: Method
  source:
    remote:
      path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
      branch: main
      repo: git@github.com:stefanosello/DotNetJsonApiClient.git
    id: OrderBy
    path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
    startLine: 174
  assemblies:
  - JsonApiClient
  namespace: JsonApiClient.Interfaces
  summary: >-
    Builds the <code>orderBy[res]</code> part of the query string. It can be used to specify how to sort in ascending order

    the set of <code class="typeparamref">TRootEntity</code> instances. The sorting is done based

    on the specified property of the <code class="typeparamref">TRootEntity</code> resource type.
  example:
  - >-
    Consider an <code>Author</code> class with resource type <code>authors</code> and the <code>Name</code> field.

    The following code snippet:

    <pre><code class="lang-csharp">queryClient.OrderBy(a =&gt; a.Name);</code></pre>

    will render the following query string:

    <pre><code class="lang-csharp">?orderBy=name</code></pre>

    considering that <code>Author</code> is the main resource type.
  syntax:
    content: IJsonApiQueryClient<TRootEntity> OrderBy(Expression<Func<TRootEntity, object>> orderByStatement)
    parameters:
    - id: orderByStatement
      type: System.Linq.Expressions.Expression{System.Func{{TRootEntity},System.Object}}
      description: >-
        A lambda function accepting a <code class="typeparamref">TRootEntity</code> as parameter
            and returning a <code class="typeparamref">TRootEntity</code> attribute property, that will be used to sort the records of
            the given subresource set.
    return:
      type: JsonApiClient.Interfaces.IJsonApiQueryClient`1
      description: This <xref href="JsonApiClient.Interfaces.IJsonApiQueryClient%601" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Function OrderBy(orderByStatement As Expression(Of Func(Of TRootEntity, Object))) As IJsonApiQueryClient(Of TRootEntity)
  overload: JsonApiClient.Interfaces.IJsonApiQueryClient`1.OrderBy*
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).OrderBy(Expression(Of Func(Of TRootEntity, Object)))
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).OrderBy(System.Linq.Expressions.Expression(Of System.Func(Of TRootEntity, Object)))
  name.vb: OrderBy(Expression(Of Func(Of TRootEntity, Object)))
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  commentId: M:JsonApiClient.Interfaces.IJsonApiQueryClient`1.OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  id: OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  parent: JsonApiClient.Interfaces.IJsonApiQueryClient`1
  langs:
  - csharp
  - vb
  name: OrderByDescending<TEntity>(Expression<Func<TEntity, object>>, Expression<Func<TRootEntity, IEnumerable<TEntity>>>)
  nameWithType: IJsonApiQueryClient<TRootEntity>.OrderByDescending<TEntity>(Expression<Func<TEntity, object>>, Expression<Func<TRootEntity, IEnumerable<TEntity>>>)
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.OrderByDescending<TEntity>(System.Linq.Expressions.Expression<System.Func<TEntity, object>>, System.Linq.Expressions.Expression<System.Func<TRootEntity, System.Collections.Generic.IEnumerable<TEntity>>>)
  type: Method
  source:
    remote:
      path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
      branch: main
      repo: git@github.com:stefanosello/DotNetJsonApiClient.git
    id: OrderByDescending
    path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
    startLine: 200
  assemblies:
  - JsonApiClient
  namespace: JsonApiClient.Interfaces
  summary: >-
    Builds the <code>orderBy[res]</code> part of the query string. It can be used to specify how to sort in descending order

    the instances of the specified <code class="typeparamref">TRootEntity</code> subresources set. The sorting is done based

    on the specified property of the <code class="typeparamref">TEntity</code> resource type.
  example:
  - >-
    Consider an <code>Author</code> class with resource type <code>authors</code> and a relationship <code>Books</code> with an entity

    type <code>books</code>. Each book also has the field <code>Title</code>.

    The following code snippet:

    <pre><code class="lang-csharp">queryClient.OrderBy(b =&gt; b.Title, a =&gt; a.Books);</code></pre>

    will render the following query string:

    <pre><code class="lang-csharp">?orderBy[books]=title</code></pre>

    considering that <code>Author</code> is the main resource type.
  syntax:
    content: 'IJsonApiQueryClient<TRootEntity> OrderByDescending<TEntity>(Expression<Func<TEntity, object>> orderByStatement, Expression<Func<TRootEntity, IEnumerable<TEntity>>> subresourceSelector) where TEntity : class, IJsonApiResource'
    parameters:
    - id: orderByStatement
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Object}}
      description: >-
        A lambda function accepting a <code class="typeparamref">TEntity</code> as parameter
            and returning a <code class="typeparamref">TEntity</code> attribute property, that will be used to sort the records of
            the given subresource set.
    - id: subresourceSelector
      type: System.Linq.Expressions.Expression{System.Func{{TRootEntity},System.Collections.Generic.IEnumerable{{TEntity}}}}
      description: >-
        A lambda function accepting a <code class="typeparamref">TRootEntity</code> as parameter
            and returning an enumerable of <code class="typeparamref">TEntity</code>, representing the set of subresource to sort.
    typeParameters:
    - id: TEntity
    return:
      type: JsonApiClient.Interfaces.IJsonApiQueryClient`1
      description: This <xref href="JsonApiClient.Interfaces.IJsonApiQueryClient%601" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Function OrderByDescending(Of TEntity As {Class, IJsonApiResource})(orderByStatement As Expression(Of Func(Of TEntity, Object)), subresourceSelector As Expression(Of Func(Of TRootEntity, IEnumerable(Of TEntity)))) As IJsonApiQueryClient(Of TRootEntity)
  overload: JsonApiClient.Interfaces.IJsonApiQueryClient`1.OrderByDescending*
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).OrderByDescending(Of TEntity)(Expression(Of Func(Of TEntity, Object)), Expression(Of Func(Of TRootEntity, IEnumerable(Of TEntity))))
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).OrderByDescending(Of TEntity)(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Object)), System.Linq.Expressions.Expression(Of System.Func(Of TRootEntity, System.Collections.Generic.IEnumerable(Of TEntity))))
  name.vb: OrderByDescending(Of TEntity)(Expression(Of Func(Of TEntity, Object)), Expression(Of Func(Of TRootEntity, IEnumerable(Of TEntity))))
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.OrderByDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:JsonApiClient.Interfaces.IJsonApiQueryClient`1.OrderByDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: OrderByDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: JsonApiClient.Interfaces.IJsonApiQueryClient`1
  langs:
  - csharp
  - vb
  name: OrderByDescending(Expression<Func<TRootEntity, object>>)
  nameWithType: IJsonApiQueryClient<TRootEntity>.OrderByDescending(Expression<Func<TRootEntity, object>>)
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.OrderByDescending(System.Linq.Expressions.Expression<System.Func<TRootEntity, object>>)
  type: Method
  source:
    remote:
      path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
      branch: main
      repo: git@github.com:stefanosello/DotNetJsonApiClient.git
    id: OrderByDescending
    path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
    startLine: 224
  assemblies:
  - JsonApiClient
  namespace: JsonApiClient.Interfaces
  summary: >-
    Builds the <code>orderBy[res]</code> part of the query string. It can be used to specify how to sort in descending order

    the set of <code class="typeparamref">TRootEntity</code> instances. The sorting is done based

    on the specified property of the <code class="typeparamref">TRootEntity</code> resource type.
  example:
  - >-
    Consider an <code>Author</code> class with resource type <code>authors</code> and the <code>Name</code> field.

    The following code snippet:

    <pre><code class="lang-csharp">queryClient.OrderBy(a =&gt; a.Name);</code></pre>

    will render the following query string:

    <pre><code class="lang-csharp">?orderBy=name</code></pre>

    considering that <code>Author</code> is the main resource type.
  syntax:
    content: IJsonApiQueryClient<TRootEntity> OrderByDescending(Expression<Func<TRootEntity, object>> orderByStatement)
    parameters:
    - id: orderByStatement
      type: System.Linq.Expressions.Expression{System.Func{{TRootEntity},System.Object}}
      description: >-
        A lambda function accepting a <code class="typeparamref">TRootEntity</code> as parameter
            and returning a <code class="typeparamref">TRootEntity</code> attribute property, that will be used to sort the records of
            the given subresource set.
    return:
      type: JsonApiClient.Interfaces.IJsonApiQueryClient`1
      description: This <xref href="JsonApiClient.Interfaces.IJsonApiQueryClient%601" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Function OrderByDescending(orderByStatement As Expression(Of Func(Of TRootEntity, Object))) As IJsonApiQueryClient(Of TRootEntity)
  overload: JsonApiClient.Interfaces.IJsonApiQueryClient`1.OrderByDescending*
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).OrderByDescending(Expression(Of Func(Of TRootEntity, Object)))
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).OrderByDescending(System.Linq.Expressions.Expression(Of System.Func(Of TRootEntity, Object)))
  name.vb: OrderByDescending(Expression(Of Func(Of TRootEntity, Object)))
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.PageSize``1(System.Int32,System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  commentId: M:JsonApiClient.Interfaces.IJsonApiQueryClient`1.PageSize``1(System.Int32,System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  id: PageSize``1(System.Int32,System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  parent: JsonApiClient.Interfaces.IJsonApiQueryClient`1
  langs:
  - csharp
  - vb
  name: PageSize<TEntity>(int, Expression<Func<TRootEntity, IEnumerable<TEntity>>>)
  nameWithType: IJsonApiQueryClient<TRootEntity>.PageSize<TEntity>(int, Expression<Func<TRootEntity, IEnumerable<TEntity>>>)
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.PageSize<TEntity>(int, System.Linq.Expressions.Expression<System.Func<TRootEntity, System.Collections.Generic.IEnumerable<TEntity>>>)
  type: Method
  source:
    remote:
      path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
      branch: main
      repo: git@github.com:stefanosello/DotNetJsonApiClient.git
    id: PageSize
    path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
    startLine: 226
  assemblies:
  - JsonApiClient
  namespace: JsonApiClient.Interfaces
  syntax:
    content: 'IJsonApiQueryClient<TRootEntity> PageSize<TEntity>(int limit, Expression<Func<TRootEntity, IEnumerable<TEntity>>> resourceSelector) where TEntity : class, IJsonApiResource'
    parameters:
    - id: limit
      type: System.Int32
    - id: resourceSelector
      type: System.Linq.Expressions.Expression{System.Func{{TRootEntity},System.Collections.Generic.IEnumerable{{TEntity}}}}
    typeParameters:
    - id: TEntity
    return:
      type: JsonApiClient.Interfaces.IJsonApiQueryClient`1
    content.vb: Function PageSize(Of TEntity As {Class, IJsonApiResource})(limit As Integer, resourceSelector As Expression(Of Func(Of TRootEntity, IEnumerable(Of TEntity)))) As IJsonApiQueryClient(Of TRootEntity)
  overload: JsonApiClient.Interfaces.IJsonApiQueryClient`1.PageSize*
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).PageSize(Of TEntity)(Integer, Expression(Of Func(Of TRootEntity, IEnumerable(Of TEntity))))
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).PageSize(Of TEntity)(Integer, System.Linq.Expressions.Expression(Of System.Func(Of TRootEntity, System.Collections.Generic.IEnumerable(Of TEntity))))
  name.vb: PageSize(Of TEntity)(Integer, Expression(Of Func(Of TRootEntity, IEnumerable(Of TEntity))))
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.PageSize(System.Int32)
  commentId: M:JsonApiClient.Interfaces.IJsonApiQueryClient`1.PageSize(System.Int32)
  id: PageSize(System.Int32)
  parent: JsonApiClient.Interfaces.IJsonApiQueryClient`1
  langs:
  - csharp
  - vb
  name: PageSize(int)
  nameWithType: IJsonApiQueryClient<TRootEntity>.PageSize(int)
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.PageSize(int)
  type: Method
  source:
    remote:
      path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
      branch: main
      repo: git@github.com:stefanosello/DotNetJsonApiClient.git
    id: PageSize
    path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
    startLine: 228
  assemblies:
  - JsonApiClient
  namespace: JsonApiClient.Interfaces
  syntax:
    content: IJsonApiQueryClient<TRootEntity> PageSize(int limit)
    parameters:
    - id: limit
      type: System.Int32
    return:
      type: JsonApiClient.Interfaces.IJsonApiQueryClient`1
    content.vb: Function PageSize(limit As Integer) As IJsonApiQueryClient(Of TRootEntity)
  overload: JsonApiClient.Interfaces.IJsonApiQueryClient`1.PageSize*
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).PageSize(Integer)
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).PageSize(Integer)
  name.vb: PageSize(Integer)
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.PageNumber``1(System.Int32,System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  commentId: M:JsonApiClient.Interfaces.IJsonApiQueryClient`1.PageNumber``1(System.Int32,System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  id: PageNumber``1(System.Int32,System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  parent: JsonApiClient.Interfaces.IJsonApiQueryClient`1
  langs:
  - csharp
  - vb
  name: PageNumber<TEntity>(int, Expression<Func<TRootEntity, IEnumerable<TEntity>>>)
  nameWithType: IJsonApiQueryClient<TRootEntity>.PageNumber<TEntity>(int, Expression<Func<TRootEntity, IEnumerable<TEntity>>>)
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.PageNumber<TEntity>(int, System.Linq.Expressions.Expression<System.Func<TRootEntity, System.Collections.Generic.IEnumerable<TEntity>>>)
  type: Method
  source:
    remote:
      path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
      branch: main
      repo: git@github.com:stefanosello/DotNetJsonApiClient.git
    id: PageNumber
    path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
    startLine: 230
  assemblies:
  - JsonApiClient
  namespace: JsonApiClient.Interfaces
  syntax:
    content: 'IJsonApiQueryClient<TRootEntity> PageNumber<TEntity>(int number, Expression<Func<TRootEntity, IEnumerable<TEntity>>> resourceSelector) where TEntity : class, IJsonApiResource'
    parameters:
    - id: number
      type: System.Int32
    - id: resourceSelector
      type: System.Linq.Expressions.Expression{System.Func{{TRootEntity},System.Collections.Generic.IEnumerable{{TEntity}}}}
    typeParameters:
    - id: TEntity
    return:
      type: JsonApiClient.Interfaces.IJsonApiQueryClient`1
    content.vb: Function PageNumber(Of TEntity As {Class, IJsonApiResource})(number As Integer, resourceSelector As Expression(Of Func(Of TRootEntity, IEnumerable(Of TEntity)))) As IJsonApiQueryClient(Of TRootEntity)
  overload: JsonApiClient.Interfaces.IJsonApiQueryClient`1.PageNumber*
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).PageNumber(Of TEntity)(Integer, Expression(Of Func(Of TRootEntity, IEnumerable(Of TEntity))))
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).PageNumber(Of TEntity)(Integer, System.Linq.Expressions.Expression(Of System.Func(Of TRootEntity, System.Collections.Generic.IEnumerable(Of TEntity))))
  name.vb: PageNumber(Of TEntity)(Integer, Expression(Of Func(Of TRootEntity, IEnumerable(Of TEntity))))
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.PageNumber(System.Int32)
  commentId: M:JsonApiClient.Interfaces.IJsonApiQueryClient`1.PageNumber(System.Int32)
  id: PageNumber(System.Int32)
  parent: JsonApiClient.Interfaces.IJsonApiQueryClient`1
  langs:
  - csharp
  - vb
  name: PageNumber(int)
  nameWithType: IJsonApiQueryClient<TRootEntity>.PageNumber(int)
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.PageNumber(int)
  type: Method
  source:
    remote:
      path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
      branch: main
      repo: git@github.com:stefanosello/DotNetJsonApiClient.git
    id: PageNumber
    path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
    startLine: 232
  assemblies:
  - JsonApiClient
  namespace: JsonApiClient.Interfaces
  syntax:
    content: IJsonApiQueryClient<TRootEntity> PageNumber(int number)
    parameters:
    - id: number
      type: System.Int32
    return:
      type: JsonApiClient.Interfaces.IJsonApiQueryClient`1
    content.vb: Function PageNumber(number As Integer) As IJsonApiQueryClient(Of TRootEntity)
  overload: JsonApiClient.Interfaces.IJsonApiQueryClient`1.PageNumber*
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).PageNumber(Integer)
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).PageNumber(Integer)
  name.vb: PageNumber(Integer)
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.FindAsync(System.Object,System.Threading.CancellationToken)
  commentId: M:JsonApiClient.Interfaces.IJsonApiQueryClient`1.FindAsync(System.Object,System.Threading.CancellationToken)
  id: FindAsync(System.Object,System.Threading.CancellationToken)
  parent: JsonApiClient.Interfaces.IJsonApiQueryClient`1
  langs:
  - csharp
  - vb
  name: FindAsync(object, CancellationToken)
  nameWithType: IJsonApiQueryClient<TRootEntity>.FindAsync(object, CancellationToken)
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.FindAsync(object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
      branch: main
      repo: git@github.com:stefanosello/DotNetJsonApiClient.git
    id: FindAsync
    path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
    startLine: 234
  assemblies:
  - JsonApiClient
  namespace: JsonApiClient.Interfaces
  syntax:
    content: Task<TRootEntity?> FindAsync(object id, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.Object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{TRootEntity}}
    content.vb: Function FindAsync(id As Object, cancellationToken As CancellationToken = Nothing) As Task(Of TRootEntity)
  overload: JsonApiClient.Interfaces.IJsonApiQueryClient`1.FindAsync*
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).FindAsync(Object, CancellationToken)
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).FindAsync(Object, System.Threading.CancellationToken)
  name.vb: FindAsync(Object, CancellationToken)
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.FirstOrDefaultAsync(System.Threading.CancellationToken)
  commentId: M:JsonApiClient.Interfaces.IJsonApiQueryClient`1.FirstOrDefaultAsync(System.Threading.CancellationToken)
  id: FirstOrDefaultAsync(System.Threading.CancellationToken)
  parent: JsonApiClient.Interfaces.IJsonApiQueryClient`1
  langs:
  - csharp
  - vb
  name: FirstOrDefaultAsync(CancellationToken)
  nameWithType: IJsonApiQueryClient<TRootEntity>.FirstOrDefaultAsync(CancellationToken)
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.FirstOrDefaultAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
      branch: main
      repo: git@github.com:stefanosello/DotNetJsonApiClient.git
    id: FirstOrDefaultAsync
    path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
    startLine: 236
  assemblies:
  - JsonApiClient
  namespace: JsonApiClient.Interfaces
  syntax:
    content: Task<TRootEntity?> FirstOrDefaultAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{TRootEntity}}
    content.vb: Function FirstOrDefaultAsync(cancellationToken As CancellationToken = Nothing) As Task(Of TRootEntity)
  overload: JsonApiClient.Interfaces.IJsonApiQueryClient`1.FirstOrDefaultAsync*
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).FirstOrDefaultAsync(CancellationToken)
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).FirstOrDefaultAsync(System.Threading.CancellationToken)
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.ToListAsync(System.Threading.CancellationToken)
  commentId: M:JsonApiClient.Interfaces.IJsonApiQueryClient`1.ToListAsync(System.Threading.CancellationToken)
  id: ToListAsync(System.Threading.CancellationToken)
  parent: JsonApiClient.Interfaces.IJsonApiQueryClient`1
  langs:
  - csharp
  - vb
  name: ToListAsync(CancellationToken)
  nameWithType: IJsonApiQueryClient<TRootEntity>.ToListAsync(CancellationToken)
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.ToListAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
      branch: main
      repo: git@github.com:stefanosello/DotNetJsonApiClient.git
    id: ToListAsync
    path: JsonApiClient/Interfaces/IJsonApiQueryClient.cs
    startLine: 238
  assemblies:
  - JsonApiClient
  namespace: JsonApiClient.Interfaces
  syntax:
    content: Task<List<TRootEntity>> ToListAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{{TRootEntity}}}
    content.vb: Function ToListAsync(cancellationToken As CancellationToken = Nothing) As Task(Of List(Of TRootEntity))
  overload: JsonApiClient.Interfaces.IJsonApiQueryClient`1.ToListAsync*
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).ToListAsync(CancellationToken)
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).ToListAsync(System.Threading.CancellationToken)
references:
- uid: JsonApiClient.Interfaces
  commentId: N:JsonApiClient.Interfaces
  href: JsonApiClient.html
  name: JsonApiClient.Interfaces
  nameWithType: JsonApiClient.Interfaces
  fullName: JsonApiClient.Interfaces
  spec.csharp:
  - uid: JsonApiClient
    name: JsonApiClient
    href: JsonApiClient.html
  - name: .
  - uid: JsonApiClient.Interfaces
    name: Interfaces
    href: JsonApiClient.Interfaces.html
  spec.vb:
  - uid: JsonApiClient
    name: JsonApiClient
    href: JsonApiClient.html
  - name: .
  - uid: JsonApiClient.Interfaces
    name: Interfaces
    href: JsonApiClient.Interfaces.html
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1
  commentId: T:JsonApiClient.Interfaces.IJsonApiQueryClient`1
  parent: JsonApiClient.Interfaces
  href: JsonApiClient.Interfaces.IJsonApiQueryClient-1.html
  name: IJsonApiQueryClient<TRootEntity>
  nameWithType: IJsonApiQueryClient<TRootEntity>
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity)
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity)
  name.vb: IJsonApiQueryClient(Of TRootEntity)
  spec.csharp:
  - uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1
    name: IJsonApiQueryClient
    href: JsonApiClient.Interfaces.IJsonApiQueryClient-1.html
  - name: <
  - name: TRootEntity
  - name: '>'
  spec.vb:
  - uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1
    name: IJsonApiQueryClient
    href: JsonApiClient.Interfaces.IJsonApiQueryClient-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TRootEntity
  - name: )
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.Select*
  commentId: Overload:JsonApiClient.Interfaces.IJsonApiQueryClient`1.Select
  href: JsonApiClient.Interfaces.IJsonApiQueryClient-1.html#JsonApiClient_Interfaces_IJsonApiQueryClient_1_Select__1_System_Linq_Expressions_Expression_System_Func___0_System_Object___
  name: Select
  nameWithType: IJsonApiQueryClient<TRootEntity>.Select
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.Select
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).Select
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).Select
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TEntity, object>>
  nameWithType: Expression<Func<TEntity, object>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, object>>
  nameWithType.vb: Expression(Of Func(Of TEntity, Object))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Object))
  name.vb: Expression(Of Func(Of TEntity, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: System.Linq.Expressions.Expression{System.Func{{TRootEntity},System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TRootEntity, object>>
  nameWithType: Expression<Func<TRootEntity, object>>
  fullName: System.Linq.Expressions.Expression<System.Func<TRootEntity, object>>
  nameWithType.vb: Expression(Of Func(Of TRootEntity, Object))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TRootEntity, Object))
  name.vb: Expression(Of Func(Of TRootEntity, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TRootEntity
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TRootEntity
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.Where*
  commentId: Overload:JsonApiClient.Interfaces.IJsonApiQueryClient`1.Where
  href: JsonApiClient.Interfaces.IJsonApiQueryClient-1.html#JsonApiClient_Interfaces_IJsonApiQueryClient_1_Where__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  name: Where
  nameWithType: IJsonApiQueryClient<TRootEntity>.Where
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.Where
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).Where
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).Where
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TEntity, bool>>
  nameWithType: Expression<Func<TEntity, bool>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, bool>>
  nameWithType.vb: Expression(Of Func(Of TEntity, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean))
  name.vb: Expression(Of Func(Of TEntity, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TRootEntity},System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TRootEntity, bool>>
  nameWithType: Expression<Func<TRootEntity, bool>>
  fullName: System.Linq.Expressions.Expression<System.Func<TRootEntity, bool>>
  nameWithType.vb: Expression(Of Func(Of TRootEntity, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TRootEntity, Boolean))
  name.vb: Expression(Of Func(Of TRootEntity, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TRootEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TRootEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.Include*
  commentId: Overload:JsonApiClient.Interfaces.IJsonApiQueryClient`1.Include
  href: JsonApiClient.Interfaces.IJsonApiQueryClient-1.html#JsonApiClient_Interfaces_IJsonApiQueryClient_1_Include_System_Linq_Expressions_Expression_System_Func__0_System_Object___
  name: Include
  nameWithType: IJsonApiQueryClient<TRootEntity>.Include
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.Include
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).Include
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).Include
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.OrderBy*
  commentId: Overload:JsonApiClient.Interfaces.IJsonApiQueryClient`1.OrderBy
  href: JsonApiClient.Interfaces.IJsonApiQueryClient-1.html#JsonApiClient_Interfaces_IJsonApiQueryClient_1_OrderBy__1_System_Linq_Expressions_Expression_System_Func___0_System_Object___System_Linq_Expressions_Expression_System_Func__0_System_Collections_Generic_IEnumerable___0____
  name: OrderBy
  nameWithType: IJsonApiQueryClient<TRootEntity>.OrderBy
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.OrderBy
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).OrderBy
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).OrderBy
- uid: System.Linq.Expressions.Expression{System.Func{{TRootEntity},System.Collections.Generic.IEnumerable{{TEntity}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TRootEntity, IEnumerable<TEntity>>>
  nameWithType: Expression<Func<TRootEntity, IEnumerable<TEntity>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TRootEntity, System.Collections.Generic.IEnumerable<TEntity>>>
  nameWithType.vb: Expression(Of Func(Of TRootEntity, IEnumerable(Of TEntity)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TRootEntity, System.Collections.Generic.IEnumerable(Of TEntity)))
  name.vb: Expression(Of Func(Of TRootEntity, IEnumerable(Of TEntity)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TRootEntity
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TRootEntity
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
  - name: )
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.OrderByDescending*
  commentId: Overload:JsonApiClient.Interfaces.IJsonApiQueryClient`1.OrderByDescending
  href: JsonApiClient.Interfaces.IJsonApiQueryClient-1.html#JsonApiClient_Interfaces_IJsonApiQueryClient_1_OrderByDescending__1_System_Linq_Expressions_Expression_System_Func___0_System_Object___System_Linq_Expressions_Expression_System_Func__0_System_Collections_Generic_IEnumerable___0____
  name: OrderByDescending
  nameWithType: IJsonApiQueryClient<TRootEntity>.OrderByDescending
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.OrderByDescending
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).OrderByDescending
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).OrderByDescending
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.PageSize*
  commentId: Overload:JsonApiClient.Interfaces.IJsonApiQueryClient`1.PageSize
  href: JsonApiClient.Interfaces.IJsonApiQueryClient-1.html#JsonApiClient_Interfaces_IJsonApiQueryClient_1_PageSize__1_System_Int32_System_Linq_Expressions_Expression_System_Func__0_System_Collections_Generic_IEnumerable___0____
  name: PageSize
  nameWithType: IJsonApiQueryClient<TRootEntity>.PageSize
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.PageSize
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).PageSize
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).PageSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.PageNumber*
  commentId: Overload:JsonApiClient.Interfaces.IJsonApiQueryClient`1.PageNumber
  href: JsonApiClient.Interfaces.IJsonApiQueryClient-1.html#JsonApiClient_Interfaces_IJsonApiQueryClient_1_PageNumber__1_System_Int32_System_Linq_Expressions_Expression_System_Func__0_System_Collections_Generic_IEnumerable___0____
  name: PageNumber
  nameWithType: IJsonApiQueryClient<TRootEntity>.PageNumber
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.PageNumber
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).PageNumber
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).PageNumber
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.FindAsync*
  commentId: Overload:JsonApiClient.Interfaces.IJsonApiQueryClient`1.FindAsync
  href: JsonApiClient.Interfaces.IJsonApiQueryClient-1.html#JsonApiClient_Interfaces_IJsonApiQueryClient_1_FindAsync_System_Object_System_Threading_CancellationToken_
  name: FindAsync
  nameWithType: IJsonApiQueryClient<TRootEntity>.FindAsync
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.FindAsync
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).FindAsync
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).FindAsync
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{TRootEntity}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TRootEntity>
  nameWithType: Task<TRootEntity>
  fullName: System.Threading.Tasks.Task<TRootEntity>
  nameWithType.vb: Task(Of TRootEntity)
  fullName.vb: System.Threading.Tasks.Task(Of TRootEntity)
  name.vb: Task(Of TRootEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TRootEntity
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TRootEntity
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.FirstOrDefaultAsync*
  commentId: Overload:JsonApiClient.Interfaces.IJsonApiQueryClient`1.FirstOrDefaultAsync
  href: JsonApiClient.Interfaces.IJsonApiQueryClient-1.html#JsonApiClient_Interfaces_IJsonApiQueryClient_1_FirstOrDefaultAsync_System_Threading_CancellationToken_
  name: FirstOrDefaultAsync
  nameWithType: IJsonApiQueryClient<TRootEntity>.FirstOrDefaultAsync
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.FirstOrDefaultAsync
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).FirstOrDefaultAsync
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).FirstOrDefaultAsync
- uid: JsonApiClient.Interfaces.IJsonApiQueryClient`1.ToListAsync*
  commentId: Overload:JsonApiClient.Interfaces.IJsonApiQueryClient`1.ToListAsync
  href: JsonApiClient.Interfaces.IJsonApiQueryClient-1.html#JsonApiClient_Interfaces_IJsonApiQueryClient_1_ToListAsync_System_Threading_CancellationToken_
  name: ToListAsync
  nameWithType: IJsonApiQueryClient<TRootEntity>.ToListAsync
  fullName: JsonApiClient.Interfaces.IJsonApiQueryClient<TRootEntity>.ToListAsync
  nameWithType.vb: IJsonApiQueryClient(Of TRootEntity).ToListAsync
  fullName.vb: JsonApiClient.Interfaces.IJsonApiQueryClient(Of TRootEntity).ToListAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{{TRootEntity}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<TRootEntity>>
  nameWithType: Task<List<TRootEntity>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<TRootEntity>>
  nameWithType.vb: Task(Of List(Of TRootEntity))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of TRootEntity))
  name.vb: Task(Of List(Of TRootEntity))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: TRootEntity
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: TRootEntity
  - name: )
  - name: )
