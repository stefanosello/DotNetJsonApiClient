{
  "README.html": {
    "href": "README.html",
    "title": "| DotNetJsonApiClient",
    "keywords": "Welcome to DotNetJsonApiClient â€“ the ultimate .NET library that brings the power and flexibility of LINQ expressions to json:api requests. With DotNetJsonApiClient, crafting complex json:api queries is as intuitive as writing LINQ queries. Say goodbye to tedious request construction and hello to seamless, efficient API interactions with familiar methods like Where, Select, and more. Transform your API development experience and streamline your request-building process with DotNetJsonApiClient today!"
  },
  "api/JsonApiClient.Attributes.JAttrAttribute.html": {
    "href": "api/JsonApiClient.Attributes.JAttrAttribute.html",
    "title": "Class JAttrAttribute | DotNetJsonApiClient",
    "keywords": "Class JAttrAttribute Namespace JsonApiClient.Attributes Assembly JsonApiClient.dll Used to decorate those properties of a model or DTO that represent a json:api resource attribute. [AttributeUsage(AttributeTargets.Property)] public class JAttrAttribute : Attribute Inheritance object Attribute JAttrAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/JsonApiClient.Attributes.JRelAttribute.html": {
    "href": "api/JsonApiClient.Attributes.JRelAttribute.html",
    "title": "Class JRelAttribute | DotNetJsonApiClient",
    "keywords": "Class JRelAttribute Namespace JsonApiClient.Attributes Assembly JsonApiClient.dll Used to decorate those properties of a model or DTO that represent a relationship to another json:api resource. [AttributeUsage(AttributeTargets.Property)] public class JRelAttribute : Attribute Inheritance object Attribute JRelAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/JsonApiClient.Attributes.JResAttribute.html": {
    "href": "api/JsonApiClient.Attributes.JResAttribute.html",
    "title": "Class JResAttribute | DotNetJsonApiClient",
    "keywords": "Class JResAttribute Namespace JsonApiClient.Attributes Assembly JsonApiClient.dll Used to decorate models or DTOs representing a json:api resource. [AttributeUsage(AttributeTargets.Class, Inherited = false)] public class JResAttribute : Attribute Inheritance object Attribute JResAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors JResAttribute(string, string, string?) Used to decorate models or DTOs representing a json:api resource. public JResAttribute(string clientId, string apiNamespace, string? resourceName = null) Parameters clientId string The name of the named http client as configured in the application program.cs file apiNamespace string The namespace (i.e. the trailing part of the path) of the resource api url resourceName string The name of the resources. If not give, the name of the class is taken into account instead. Properties ApiNamespace The resource's api namespace public string ApiNamespace { get; } Property Value string ClientId The name of the named http client, as configured in the application program.cs file public string ClientId { get; } Property Value string ResourceName The resource name, if different from the uncapitalised class name public string? ResourceName { get; } Property Value string"
  },
  "api/JsonApiClient.Attributes.html": {
    "href": "api/JsonApiClient.Attributes.html",
    "title": "Namespace JsonApiClient.Attributes | DotNetJsonApiClient",
    "keywords": "Namespace JsonApiClient.Attributes Classes JAttrAttribute Used to decorate those properties of a model or DTO that represent a json:api resource attribute. JRelAttribute Used to decorate those properties of a model or DTO that represent a relationship to another json:api resource. JResAttribute Used to decorate models or DTOs representing a json:api resource."
  },
  "api/JsonApiClient.Enums.PaginationParameter.html": {
    "href": "api/JsonApiClient.Enums.PaginationParameter.html",
    "title": "Enum PaginationParameter | DotNetJsonApiClient",
    "keywords": "Enum PaginationParameter Namespace JsonApiClient.Enums Assembly JsonApiClient.dll public enum PaginationParameter Fields PageNumber = 1 PageSize = 0"
  },
  "api/JsonApiClient.Enums.SortDirection.html": {
    "href": "api/JsonApiClient.Enums.SortDirection.html",
    "title": "Enum SortDirection | DotNetJsonApiClient",
    "keywords": "Enum SortDirection Namespace JsonApiClient.Enums Assembly JsonApiClient.dll public enum SortDirection Fields Ascending = 0 Descending = 1"
  },
  "api/JsonApiClient.Enums.html": {
    "href": "api/JsonApiClient.Enums.html",
    "title": "Namespace JsonApiClient.Enums | DotNetJsonApiClient",
    "keywords": "Namespace JsonApiClient.Enums Enums PaginationParameter SortDirection"
  },
  "api/JsonApiClient.Exceptions.MissingAttributeException.html": {
    "href": "api/JsonApiClient.Exceptions.MissingAttributeException.html",
    "title": "Class MissingAttributeException | DotNetJsonApiClient",
    "keywords": "Class MissingAttributeException Namespace JsonApiClient.Exceptions Assembly JsonApiClient.dll Exception thrown when an attribute that is required for the proper functioning of the library is missing. This is usually fired when a resource model is not decorated with the required JResAttribute attribute. public class MissingAttributeException : InvalidOperationException, ISerializable Inheritance object Exception SystemException InvalidOperationException MissingAttributeException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MissingAttributeException(Type, Type) Constructor of the exception, taking a message to be displayed. public MissingAttributeException(Type attributeType, Type modelType) Parameters attributeType Type The type of the attribute that is missing. modelType Type The type of the class which should be decorated with the attribute that is missing."
  },
  "api/JsonApiClient.Exceptions.StatementTranslationException.html": {
    "href": "api/JsonApiClient.Exceptions.StatementTranslationException.html",
    "title": "Class StatementTranslationException | DotNetJsonApiClient",
    "keywords": "Class StatementTranslationException Namespace JsonApiClient.Exceptions Assembly JsonApiClient.dll public class StatementTranslationException : InvalidOperationException, ISerializable Inheritance object Exception SystemException InvalidOperationException StatementTranslationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StatementTranslationException(string) public StatementTranslationException(string message) Parameters message string StatementTranslationException(string, Exception) public StatementTranslationException(string message, Exception innerException) Parameters message string innerException Exception"
  },
  "api/JsonApiClient.Exceptions.html": {
    "href": "api/JsonApiClient.Exceptions.html",
    "title": "Namespace JsonApiClient.Exceptions | DotNetJsonApiClient",
    "keywords": "Namespace JsonApiClient.Exceptions Classes MissingAttributeException Exception thrown when an attribute that is required for the proper functioning of the library is missing. This is usually fired when a resource model is not decorated with the required JResAttribute attribute."
  },
  "api/JsonApiClient.Extensions.StringExtensions.html": {
    "href": "api/JsonApiClient.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | DotNetJsonApiClient",
    "keywords": "Class StringExtensions Namespace JsonApiClient.Extensions Assembly JsonApiClient.dll public static class StringExtensions Inheritance object StringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Uncapitalize(string) public static string Uncapitalize(this string arg) Parameters arg string Returns string"
  },
  "api/JsonApiClient.Extensions.TypeExtentions.html": {
    "href": "api/JsonApiClient.Extensions.TypeExtentions.html",
    "title": "Class TypeExtentions | DotNetJsonApiClient",
    "keywords": "Class TypeExtentions Namespace JsonApiClient.Extensions Assembly JsonApiClient.dll public static class TypeExtentions Inheritance object TypeExtentions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetResourceHttpClientId(Type) public static string GetResourceHttpClientId(this Type type) Parameters type Type Returns string GetResourceName(Type) public static string GetResourceName(this Type type) Parameters type Type Returns string GetResourceNamespace(Type) public static string GetResourceNamespace(this Type type) Parameters type Type Returns string"
  },
  "api/JsonApiClient.Extensions.html": {
    "href": "api/JsonApiClient.Extensions.html",
    "title": "Namespace JsonApiClient.Extensions | DotNetJsonApiClient",
    "keywords": "Namespace JsonApiClient.Extensions Classes StringExtensions TypeExtentions"
  },
  "api/JsonApiClient.Interfaces.IJsonApiClient-1.html": {
    "href": "api/JsonApiClient.Interfaces.IJsonApiClient-1.html",
    "title": "Interface IJsonApiClient<TEntity> | DotNetJsonApiClient",
    "keywords": "Interface IJsonApiClient<TEntity> Namespace JsonApiClient.Interfaces Assembly JsonApiClient.dll public interface IJsonApiClient<TEntity> where TEntity : class Type Parameters TEntity Properties Query IJsonApiQueryClient<TEntity> Query { get; } Property Value IJsonApiQueryClient<TEntity>"
  },
  "api/JsonApiClient.Interfaces.IJsonApiClient.html": {
    "href": "api/JsonApiClient.Interfaces.IJsonApiClient.html",
    "title": "Interface IJsonApiClient | DotNetJsonApiClient",
    "keywords": "Interface IJsonApiClient Namespace JsonApiClient.Interfaces Assembly JsonApiClient.dll Provides a method to get the query client used to make read requests to a json:api compliant API. public interface IJsonApiClient Methods Query<TEntity>() Provides the query client for the specified resource entity. IJsonApiQueryClient<TEntity> Query<TEntity>() where TEntity : class, IJsonApiResource Returns IJsonApiQueryClient<TEntity> The IJsonApiQueryClient<TRootEntity> query client for the specified resource. Type Parameters TEntity The main resource to be queried."
  },
  "api/JsonApiClient.Interfaces.IJsonApiClientBuilder-1.html": {
    "href": "api/JsonApiClient.Interfaces.IJsonApiClientBuilder-1.html",
    "title": "Interface IJsonApiClientBuilder<TRootEntity> | DotNetJsonApiClient",
    "keywords": "Interface IJsonApiClientBuilder<TRootEntity> Namespace JsonApiClient.Interfaces Assembly JsonApiClient.dll public interface IJsonApiClientBuilder<TRootEntity> where TRootEntity : class Type Parameters TRootEntity Methods Build() IJsonApiClient<TRootEntity> Build() Returns IJsonApiClient<TRootEntity> Include(Expression<Func<TRootEntity, object>>) IJsonApiClientBuilder<TRootEntity> Include(Expression<Func<TRootEntity, object>> includeStatement) Parameters includeStatement Expression<Func<TRootEntity, object>> Returns IJsonApiClientBuilder<TRootEntity> Include<TEntity>(Expression<Func<TEntity, object>>) IJsonApiClientBuilder<TRootEntity> Include<TEntity>(Expression<Func<TEntity, object>> includeStatement) where TEntity : class Parameters includeStatement Expression<Func<TEntity, object>> Returns IJsonApiClientBuilder<TRootEntity> Type Parameters TEntity OrderBy(Expression<Func<TRootEntity, object>>) IJsonApiClientBuilder<TRootEntity> OrderBy(Expression<Func<TRootEntity, object>> orderByStatement) Parameters orderByStatement Expression<Func<TRootEntity, object>> Returns IJsonApiClientBuilder<TRootEntity> OrderByDescending(Expression<Func<TRootEntity, object>>) IJsonApiClientBuilder<TRootEntity> OrderByDescending(Expression<Func<TRootEntity, object>> orderByStatement) Parameters orderByStatement Expression<Func<TRootEntity, object>> Returns IJsonApiClientBuilder<TRootEntity> OrderByDescending<TEntity>(Expression<Func<TEntity, object>>) IJsonApiClientBuilder<TRootEntity> OrderByDescending<TEntity>(Expression<Func<TEntity, object>> orderByStatement) where TEntity : class Parameters orderByStatement Expression<Func<TEntity, object>> Returns IJsonApiClientBuilder<TRootEntity> Type Parameters TEntity OrderBy<TEntity>(Expression<Func<TEntity, object>>) IJsonApiClientBuilder<TRootEntity> OrderBy<TEntity>(Expression<Func<TEntity, object>> orderByStatement) where TEntity : class Parameters orderByStatement Expression<Func<TEntity, object>> Returns IJsonApiClientBuilder<TRootEntity> Type Parameters TEntity PageNumber(int) IJsonApiClientBuilder<TRootEntity> PageNumber(int number) Parameters number int Returns IJsonApiClientBuilder<TRootEntity> PageNumber<TEntity>(int) IJsonApiClientBuilder<TRootEntity> PageNumber<TEntity>(int number) where TEntity : class Parameters number int Returns IJsonApiClientBuilder<TRootEntity> Type Parameters TEntity PageSize(int) IJsonApiClientBuilder<TRootEntity> PageSize(int limit) Parameters limit int Returns IJsonApiClientBuilder<TRootEntity> PageSize<TEntity>(int) IJsonApiClientBuilder<TRootEntity> PageSize<TEntity>(int limit) where TEntity : class Parameters limit int Returns IJsonApiClientBuilder<TRootEntity> Type Parameters TEntity Select(Expression<Func<TRootEntity, object>>) IJsonApiClientBuilder<TRootEntity> Select(Expression<Func<TRootEntity, object>> selectStatement) Parameters selectStatement Expression<Func<TRootEntity, object>> Returns IJsonApiClientBuilder<TRootEntity> Select<TEntity>(Expression<Func<TEntity, object>>) IJsonApiClientBuilder<TRootEntity> Select<TEntity>(Expression<Func<TEntity, object>> selectStatement) where TEntity : class Parameters selectStatement Expression<Func<TEntity, object>> Returns IJsonApiClientBuilder<TRootEntity> Type Parameters TEntity SetHttpClient(IHttpClientFactory, string) IJsonApiClientBuilder<TRootEntity> SetHttpClient(IHttpClientFactory httpClientFactory, string httpClientId) Parameters httpClientFactory IHttpClientFactory httpClientId string Returns IJsonApiClientBuilder<TRootEntity> Where(Expression<Func<TRootEntity, bool>>) IJsonApiClientBuilder<TRootEntity> Where(Expression<Func<TRootEntity, bool>> whereStatement) Parameters whereStatement Expression<Func<TRootEntity, bool>> Returns IJsonApiClientBuilder<TRootEntity> Where<TEntity>(Expression<Func<TEntity, bool>>) IJsonApiClientBuilder<TRootEntity> Where<TEntity>(Expression<Func<TEntity, bool>> whereStatement) where TEntity : class Parameters whereStatement Expression<Func<TEntity, bool>> Returns IJsonApiClientBuilder<TRootEntity> Type Parameters TEntity"
  },
  "api/JsonApiClient.Interfaces.IJsonApiQueryClient-1.html": {
    "href": "api/JsonApiClient.Interfaces.IJsonApiQueryClient-1.html",
    "title": "Interface IJsonApiQueryClient<TRootEntity> | DotNetJsonApiClient",
    "keywords": "Interface IJsonApiQueryClient<TRootEntity> Namespace JsonApiClient.Interfaces Assembly JsonApiClient.dll Interface for a query client that can be used to build the json:api formatted query string to retrieve data from a json:api-compliant server. It exposes the main methods that can be used to build a query, plus the methods to send the request to the server through an HTTP client. public interface IJsonApiQueryClient<TRootEntity> where TRootEntity : class Type Parameters TRootEntity The main resource type requested by the query that is going to be built. Methods FindAsync(object, CancellationToken) Task<TRootEntity?> FindAsync(object id, CancellationToken cancellationToken = default) Parameters id object cancellationToken CancellationToken Returns Task<TRootEntity> FirstOrDefaultAsync(CancellationToken) Task<TRootEntity?> FirstOrDefaultAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<TRootEntity> Include(Expression<Func<TRootEntity, object>>) Builds the include part of the query string. It can be used to specify which subresources of TRootEntity resource type should be returned by the server. IJsonApiQueryClient<TRootEntity> Include(Expression<Func<TRootEntity, object>> includeStatement) Parameters includeStatement Expression<Func<TRootEntity, object>> A lambda function accepting a TRootEntity as parameter and returning a TRootEntity relationship property, that will eventually be included in the server response. Returns IJsonApiQueryClient<TRootEntity> This IJsonApiQueryClient<TRootEntity> instance. Examples Consider an Author class with resource type authors and a relationship Books with an entity type books. The following code snippet: queryClient.Include(a => a.Books); will render the following query string: ?include=books considering that Author is the main resource type. OrderBy(Expression<Func<TRootEntity, object>>) Builds the orderBy[res] part of the query string. It can be used to specify how to sort in ascending order the set of TRootEntity instances. The sorting is done based on the specified property of the TRootEntity resource type. IJsonApiQueryClient<TRootEntity> OrderBy(Expression<Func<TRootEntity, object>> orderByStatement) Parameters orderByStatement Expression<Func<TRootEntity, object>> A lambda function accepting a TRootEntity as parameter and returning a TRootEntity attribute property, that will be used to sort the records of the given subresource set. Returns IJsonApiQueryClient<TRootEntity> This IJsonApiQueryClient<TRootEntity> instance. Examples Consider an Author class with resource type authors and the Name field. The following code snippet: queryClient.OrderBy(a => a.Name); will render the following query string: ?orderBy=name considering that Author is the main resource type. OrderByDescending(Expression<Func<TRootEntity, object>>) Builds the orderBy[res] part of the query string. It can be used to specify how to sort in descending order the set of TRootEntity instances. The sorting is done based on the specified property of the TRootEntity resource type. IJsonApiQueryClient<TRootEntity> OrderByDescending(Expression<Func<TRootEntity, object>> orderByStatement) Parameters orderByStatement Expression<Func<TRootEntity, object>> A lambda function accepting a TRootEntity as parameter and returning a TRootEntity attribute property, that will be used to sort the records of the given subresource set. Returns IJsonApiQueryClient<TRootEntity> This IJsonApiQueryClient<TRootEntity> instance. Examples Consider an Author class with resource type authors and the Name field. The following code snippet: queryClient.OrderBy(a => a.Name); will render the following query string: ?orderBy=name considering that Author is the main resource type. OrderByDescending<TEntity>(Expression<Func<TEntity, object>>, Expression<Func<TRootEntity, IEnumerable<TEntity>>>) Builds the orderBy[res] part of the query string. It can be used to specify how to sort in descending order the instances of the specified TRootEntity subresources set. The sorting is done based on the specified property of the TEntity resource type. IJsonApiQueryClient<TRootEntity> OrderByDescending<TEntity>(Expression<Func<TEntity, object>> orderByStatement, Expression<Func<TRootEntity, IEnumerable<TEntity>>> subresourceSelector) where TEntity : class, IJsonApiResource Parameters orderByStatement Expression<Func<TEntity, object>> A lambda function accepting a TEntity as parameter and returning a TEntity attribute property, that will be used to sort the records of the given subresource set. subresourceSelector Expression<Func<TRootEntity, IEnumerable<TEntity>>> A lambda function accepting a TRootEntity as parameter and returning an enumerable of TEntity, representing the set of subresource to sort. Returns IJsonApiQueryClient<TRootEntity> This IJsonApiQueryClient<TRootEntity> instance. Type Parameters TEntity Examples Consider an Author class with resource type authors and a relationship Books with an entity type books. Each book also has the field Title. The following code snippet: queryClient.OrderBy(b => b.Title, a => a.Books); will render the following query string: ?orderBy[books]=title considering that Author is the main resource type. OrderBy<TEntity>(Expression<Func<TEntity, object>>, Expression<Func<TRootEntity, IEnumerable<TEntity>>>) Builds the orderBy[res] part of the query string. It can be used to specify how to sort in ascending order the instances of the specified TRootEntity subresources set. The sorting is done based on the specified property of the TEntity resource type. IJsonApiQueryClient<TRootEntity> OrderBy<TEntity>(Expression<Func<TEntity, object>> orderByStatement, Expression<Func<TRootEntity, IEnumerable<TEntity>>> subresourceSelector) where TEntity : class, IJsonApiResource Parameters orderByStatement Expression<Func<TEntity, object>> A lambda function accepting a TEntity as parameter and returning a TEntity attribute property, that will be used to sort the records of the given subresource set. subresourceSelector Expression<Func<TRootEntity, IEnumerable<TEntity>>> A lambda function accepting a TRootEntity as parameter and returning an enumerable of TEntity, representing the set of subresource to sort. Returns IJsonApiQueryClient<TRootEntity> This IJsonApiQueryClient<TRootEntity> instance. Type Parameters TEntity Examples Consider an Author class with resource type authors and a relationship Books with an entity type books. Each book also has the field Title. The following code snippet: queryClient.OrderBy(b => b.Title, a => a.Books); will render the following query string: ?orderBy[books]=title considering that Author is the main resource type. PageNumber(int) IJsonApiQueryClient<TRootEntity> PageNumber(int number) Parameters number int Returns IJsonApiQueryClient<TRootEntity> PageNumber<TEntity>(int, Expression<Func<TRootEntity, IEnumerable<TEntity>>>) IJsonApiQueryClient<TRootEntity> PageNumber<TEntity>(int number, Expression<Func<TRootEntity, IEnumerable<TEntity>>> resourceSelector) where TEntity : class, IJsonApiResource Parameters number int resourceSelector Expression<Func<TRootEntity, IEnumerable<TEntity>>> Returns IJsonApiQueryClient<TRootEntity> Type Parameters TEntity PageSize(int) IJsonApiQueryClient<TRootEntity> PageSize(int limit) Parameters limit int Returns IJsonApiQueryClient<TRootEntity> PageSize<TEntity>(int, Expression<Func<TRootEntity, IEnumerable<TEntity>>>) IJsonApiQueryClient<TRootEntity> PageSize<TEntity>(int limit, Expression<Func<TRootEntity, IEnumerable<TEntity>>> resourceSelector) where TEntity : class, IJsonApiResource Parameters limit int resourceSelector Expression<Func<TRootEntity, IEnumerable<TEntity>>> Returns IJsonApiQueryClient<TRootEntity> Type Parameters TEntity Select(Expression<Func<TRootEntity, object>>) Builds the select part of the query string. It is used to specify which fields of the main resource of type TRootEntity should be returned by the server. IJsonApiQueryClient<TRootEntity> Select(Expression<Func<TRootEntity, object>> selectStatement) Parameters selectStatement Expression<Func<TRootEntity, object>> A lambda function returning a new() object with the fields to be included in the select query parameter. Returns IJsonApiQueryClient<TRootEntity> This IJsonApiQueryClient<TRootEntity> instance. Examples Consider an Author class with resource type authors and fields Name and DateOfBirth. The following code snippet: queryClient.Select(a => new() { a.Name, b.DateOfBirth }); will render the following query string: ?select=name,dateOfBirth considering that Author is the main resource type. Select<TEntity>(Expression<Func<TEntity, object>>) Builds the select[res] part of the query string. It is used to specify which fields should be returned by the server for the resources of type TEntity. IJsonApiQueryClient<TRootEntity> Select<TEntity>(Expression<Func<TEntity, object>> selectStatement) where TEntity : class, IJsonApiResource Parameters selectStatement Expression<Func<TEntity, object>> A lambda function returning a new() object with the fields to be included in the select[res] query parameter. Returns IJsonApiQueryClient<TRootEntity> This IJsonApiQueryClient<TRootEntity> instance. Type Parameters TEntity The type of the resource for which to define the set of fields to retrieve. Examples Consider a Book class with resource type books with the fields Title and Price. The following code snippet: queryClient.Select<Book>(b => new() { b.Title, b.Price }); will render the following query string: ?select[books]=title,price ToListAsync(CancellationToken) Task<List<TRootEntity>> ToListAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<TRootEntity>> Where(Expression<Func<TRootEntity, bool>>) Builds the filter part of the query string. It can be used to specify a filtering condition on the fields of the TRootEntity and resource type and its subresources, that will affect the set of TRootEntity resources returned by the server. IJsonApiQueryClient<TRootEntity> Where(Expression<Func<TRootEntity, bool>> whereStatement) Parameters whereStatement Expression<Func<TRootEntity, bool>> A lambda function accepting a TRootEntity as parameter and returning a boolean expression that will be used as the filtering condition. Returns IJsonApiQueryClient<TRootEntity> This IJsonApiQueryClient<TRootEntity> instance. Examples Consider an Author class with resource type authors and a field Name. The following code snippet: queryClient.Where(a => a.Name == \"J.R.R. Tolkien\"); will render the following query string: ?filter=Equals(name,'J.R.R. Tolkien') considering that Author is the main resource type. Where<TEntity>(Expression<Func<TEntity, bool>>) Builds the filter[res] part of the query string. It can be used to specify a filtering condition on the fields of the TEntity resource type that will affect the set of TEntity resources returned by the server. This means that each resource of type TEntity in the server response will satisfy the filtering condition defined by the whereStatement lambda function. IJsonApiQueryClient<TRootEntity> Where<TEntity>(Expression<Func<TEntity, bool>> whereStatement) where TEntity : class, IJsonApiResource Parameters whereStatement Expression<Func<TEntity, bool>> A lambda function accepting a TEntity as parameter and returning a boolean expression that will be used as the filtering condition. Returns IJsonApiQueryClient<TRootEntity> This IJsonApiQueryClient<TRootEntity> instance. Type Parameters TEntity The type of the resource for which to define the filtering condition. Examples Consider an Author class with resource type authors and a set of related resources of class Book having resource type books and field Title. The following code snippet: The following code snippet: queryClient.Where<Book>(b => b.Title == \"The Hobbit\"); will render the following query string: ?filter[books]=Equals(title,'The Hobbit') considering that Author is the main resource type."
  },
  "api/JsonApiClient.Interfaces.IJsonApiResource.html": {
    "href": "api/JsonApiClient.Interfaces.IJsonApiResource.html",
    "title": "Interface IJsonApiResource | DotNetJsonApiClient",
    "keywords": "Interface IJsonApiResource Namespace JsonApiClient.Interfaces Assembly JsonApiClient.dll Mandatory properties for json:api resources. public interface IJsonApiResource Properties Id The Id of the resource. Since a new resource (not already created) could not have an Id, the property is nullable. string? Id { get; } Property Value string Lid The local id of the resource, considered only on new resources since already persisted resources do have an Id. string? Lid { get; } Property Value string Type The type (or public name) of the resource. string Type { get; } Property Value string"
  },
  "api/JsonApiClient.Interfaces.html": {
    "href": "api/JsonApiClient.Interfaces.html",
    "title": "Namespace JsonApiClient.Interfaces | DotNetJsonApiClient",
    "keywords": "Namespace JsonApiClient.Interfaces Interfaces IJsonApiClient Provides a method to get the query client used to make read requests to a json:api compliant API. IJsonApiQueryClient<TRootEntity> Interface for a query client that can be used to build the json:api formatted query string to retrieve data from a json:api-compliant server. It exposes the main methods that can be used to build a query, plus the methods to send the request to the server through an HTTP client. IJsonApiResource Mandatory properties for json:api resources."
  },
  "api/JsonApiClient.JsonApiClient-1.html": {
    "href": "api/JsonApiClient.JsonApiClient-1.html",
    "title": "Class JsonApiClient<TEntity> | DotNetJsonApiClient",
    "keywords": "Class JsonApiClient<TEntity> Namespace JsonApiClient Assembly JsonApiClient.dll public class JsonApiClient<TEntity> : IJsonApiClient<TEntity> where TEntity : class, IJsonApiResource Type Parameters TEntity Inheritance object JsonApiClient<TEntity> Implements IJsonApiClient<TEntity> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors JsonApiClient(IHttpClientFactory) public JsonApiClient(IHttpClientFactory httpClientFactory) Parameters httpClientFactory IHttpClientFactory Properties Query public IJsonApiQueryClient<TEntity> Query { get; } Property Value IJsonApiQueryClient<TEntity>"
  },
  "api/JsonApiClient.JsonApiClient.html": {
    "href": "api/JsonApiClient.JsonApiClient.html",
    "title": "Class JsonApiClient | DotNetJsonApiClient",
    "keywords": "Class JsonApiClient Namespace JsonApiClient Assembly JsonApiClient.dll The main entry point to the library. It provides with a method to get the query client used to make read requests to a json:api compliant API for the specified main resource type. public class JsonApiClient : IJsonApiClient Inheritance object JsonApiClient Implements IJsonApiClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors JsonApiClient(IHttpClientFactory) The main entry point to the library. It provides with a method to get the query client used to make read requests to a json:api compliant API for the specified main resource type. public JsonApiClient(IHttpClientFactory httpClientFactory) Parameters httpClientFactory IHttpClientFactory Methods Query<TEntity>() Provides the query client for the specified resource entity. public IJsonApiQueryClient<TEntity> Query<TEntity>() where TEntity : class, IJsonApiResource Returns IJsonApiQueryClient<TEntity> The IJsonApiQueryClient<TRootEntity> query client for the specified resource. Type Parameters TEntity The main resource to be queried."
  },
  "api/JsonApiClient.Models.JResource-1.html": {
    "href": "api/JsonApiClient.Models.JResource-1.html",
    "title": "Class JResource<TIdentifier> | DotNetJsonApiClient",
    "keywords": "Class JResource<TIdentifier> Namespace JsonApiClient.Models Assembly JsonApiClient.dll The base class for all json:api resources. It provides with base attributes and methods to properly handle the serialization and deserialization of the resources. public class JResource<TIdentifier> : IJsonApiResource Type Parameters TIdentifier The type of the identifier attribute (Id). Inheritance object JResource<TIdentifier> Implements IJsonApiResource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id The identifier of the resource. public TIdentifier? Id { get; set; } Property Value TIdentifier Lid The local id of the resource, considered only on new resources since already persisted resources do have an Id. public string? Lid { get; set; } Property Value string Type The type (or public name) of the resource. public string Type { get; } Property Value string"
  },
  "api/JsonApiClient.Models.html": {
    "href": "api/JsonApiClient.Models.html",
    "title": "Namespace JsonApiClient.Models | DotNetJsonApiClient",
    "keywords": "Namespace JsonApiClient.Models Classes JResource<TIdentifier> The base class for all json:api resources. It provides with base attributes and methods to properly handle the serialization and deserialization of the resources."
  },
  "api/JsonApiClient.Statements.ExpressionVisitors.AttributeSelectorExpressionVisitor.html": {
    "href": "api/JsonApiClient.Statements.ExpressionVisitors.AttributeSelectorExpressionVisitor.html",
    "title": "Class AttributeSelectorExpressionVisitor | DotNetJsonApiClient",
    "keywords": "Class AttributeSelectorExpressionVisitor Namespace JsonApiClient.Statements.ExpressionVisitors Assembly JsonApiClient.dll public class AttributeSelectorExpressionVisitor : ExpressionVisitor Inheritance object ExpressionVisitor AttributeSelectorExpressionVisitor Inherited Members ExpressionVisitor.Visit(ReadOnlyCollection<Expression>) ExpressionVisitor.VisitAndConvert<T>(ReadOnlyCollection<T>, string) ExpressionVisitor.VisitAndConvert<T>(T, string) ExpressionVisitor.VisitBinary(BinaryExpression) ExpressionVisitor.VisitBlock(BlockExpression) ExpressionVisitor.VisitCatchBlock(CatchBlock) ExpressionVisitor.VisitConditional(ConditionalExpression) ExpressionVisitor.VisitConstant(ConstantExpression) ExpressionVisitor.VisitDebugInfo(DebugInfoExpression) ExpressionVisitor.VisitDefault(DefaultExpression) ExpressionVisitor.VisitDynamic(DynamicExpression) ExpressionVisitor.VisitElementInit(ElementInit) ExpressionVisitor.VisitExtension(Expression) ExpressionVisitor.VisitGoto(GotoExpression) ExpressionVisitor.VisitIndex(IndexExpression) ExpressionVisitor.VisitInvocation(InvocationExpression) ExpressionVisitor.VisitLabel(LabelExpression) ExpressionVisitor.VisitLabelTarget(LabelTarget) ExpressionVisitor.VisitLambda<T>(Expression<T>) ExpressionVisitor.VisitListInit(ListInitExpression) ExpressionVisitor.VisitLoop(LoopExpression) ExpressionVisitor.VisitMemberAssignment(MemberAssignment) ExpressionVisitor.VisitMemberBinding(MemberBinding) ExpressionVisitor.VisitMemberInit(MemberInitExpression) ExpressionVisitor.VisitMemberListBinding(MemberListBinding) ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding) ExpressionVisitor.VisitMethodCall(MethodCallExpression) ExpressionVisitor.VisitNew(NewExpression) ExpressionVisitor.VisitNewArray(NewArrayExpression) ExpressionVisitor.VisitParameter(ParameterExpression) ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression) ExpressionVisitor.VisitSwitch(SwitchExpression) ExpressionVisitor.VisitSwitchCase(SwitchCase) ExpressionVisitor.VisitTry(TryExpression) ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression) ExpressionVisitor.VisitUnary(UnaryExpression) ExpressionVisitor.Visit<T>(ReadOnlyCollection<T>, Func<T, T>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Visit(Expression?) Dispatches the expression to one of the more specialized visit methods in this class. public override Expression? Visit(Expression? node) Parameters node Expression The expression to visit. Returns Expression The modified expression, if it or any subexpression was modified; otherwise, returns the original expression. VisitExpression(Expression?) public static string? VisitExpression(Expression? expression) Parameters expression Expression Returns string VisitMember(MemberExpression) Visits the children of the MemberExpression. protected override Expression VisitMember(MemberExpression node) Parameters node MemberExpression The expression to visit. Returns Expression The modified expression, if it or any subexpression was modified; otherwise, returns the original expression."
  },
  "api/JsonApiClient.Statements.ExpressionVisitors.html": {
    "href": "api/JsonApiClient.Statements.ExpressionVisitors.html",
    "title": "Namespace JsonApiClient.Statements.ExpressionVisitors | DotNetJsonApiClient",
    "keywords": "Namespace JsonApiClient.Statements.ExpressionVisitors Classes AttributeSelectorExpressionVisitor"
  },
  "api/JsonApiClient.html": {
    "href": "api/JsonApiClient.html",
    "title": "Namespace JsonApiClient | DotNetJsonApiClient",
    "keywords": "Namespace JsonApiClient Classes JsonApiClient The main entry point to the library. It provides with a method to get the query client used to make read requests to a json:api compliant API for the specified main resource type."
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | DotNetJsonApiClient",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | DotNetJsonApiClient",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | DotNetJsonApiClient",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}