# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: PUBLISH

on:
  push:
    branches: [ "main" ]
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Set Version Variable
      if: ${{ github.ref_type == 'tag' }}
      env:
        TAG: ${{ github.ref_name }}
      run: echo "VERSION=${TAG#v}" >> $GITHUB_ENV
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Test
      run: dotnet test --no-restore --configuration Release --logger "trx;LogFileName=test_results.xml" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./src/JsonApiClient.Tests/TestResults/coverage.cobertura.xml # Path to the coverage report
        flags: unittests
        fail_ci_if_error: true
    - name: pack nuget packages
      if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
      run: dotnet pack ./src/JsonApiClient/JsonApiClient.csproj --output nupkgs --no-restore --no-build /p:PackageVersion=$VERSION
    - name: upload nuget package
      if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
      run: dotnet nuget push nupkgs/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
